buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
}

plugins {
    id "com.diffplug.gradle.spotless" version "3.24.1"
    id "java"
    id 'java-library'
    id "maven"
}

apply plugin: 'java'

group = "com.github.ahoffer"
version = "0.1.0-SNAPSHOT"

repositories {
    maven { url "http://download.osgeo.org/webdav/geotools/" }
    maven { url "http://repo.boundlessgeo.com/main" }
    mavenLocal()
    mavenCentral()
}

task installJar(type: Exec) {
    // Added for quickstart tutorial
    commandLine 'mvn install:install-file -Dfile="lib/jai_core-1.1.3.jar.zip" -DgroupId=javax.media -DartifactId=jai-core -Dversion=1.1.3 -Dpackaging=jar'
    // Added for Solr plugin
    commandLine 'mvn install:install-file -Dfile="lib/commons-beanutils-1.9.2-noclassprop.jar" -DgroupId=commons-beanutils -DartifactId=commons-beanutils -Dversion=1.9.2 -Dpackaging=jar -Dclassifier=noclassprop'
}

//test {
//    useJUnitPlatform()
//}

def geotools_version = '20.5'
dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.0-jre'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'

    // Added for quickstart tutorial
    implementation group: 'com.miglayout', name: 'miglayout', version: '3.7.4'
    implementation group: 'javax.media', name: 'jai-core', version: '1.1.3'
    implementation group: 'org.geotools', name: 'gt-shapefile', version: geotools_version
    implementation group: 'org.geotools', name: 'gt-swing', version: geotools_version

    // Added for feature tutorial
    implementation group: 'org.geotools', name: 'gt-epsg-hsql', version: geotools_version

    // Added for query tutorial
    implementation group: 'org.geotools.jdbc', name: 'gt-jdbc-postgis', version: geotools_version

    // Added for Solr experiement
    implementation group: 'org.geotools', name: 'gt-solr', version: geotools_version
}

// Task to run Quickstart Tutorial
// Execute "gradlew quickstart" on the command line
task(quickstart, dependsOn: 'classes', type: JavaExec) {
    main = "org.geotools.tutorial.quickstart.Quickstart"
    classpath = sourceSets.main.runtimeClasspath
}

// Task to run Feature Tutorial
// Execute "gradlew feature" on the command line
task(csv2shape, dependsOn: 'classes', type: JavaExec) {
    main = "org.geotools.tutorial.feature.Csv2Shape"
    classpath = sourceSets.main.runtimeClasspath
    // Assign all Java system properties from
    // the command line to the JavaExec task.
    systemProperties System.properties
}

// Task to run Query Tutorial
task(query, dependsOn: 'classes', type: JavaExec) {
    main = "org.geotools.tutorial.filter.QueryLab"
    classpath = sourceSets.main.runtimeClasspath
    // Assign all Java system properties from
    // the command line to the JavaExec task.
    systemProperties System.properties
}

// Automatic formatting
spotless {
    java {
        googleJavaFormat()
    }
    groovyGradle {
        target '*.gradle'
        greclipse().configFile('greclipse.properties')
    }
}
